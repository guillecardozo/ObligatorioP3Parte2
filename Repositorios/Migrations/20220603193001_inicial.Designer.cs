// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositorios;

namespace Repositorios.Migrations
{
    [DbContext(typeof(LibreriaContext))]
    [Migration("20220603193001_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ObligatorioP3.EntidadesNegocio.Compra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("CompraUsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaCompra")
                        .HasColumnType("datetime2");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int?>("TasasId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TasasId");

                    b.ToTable("Compras");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Compra");
                });

            modelBuilder.Entity("ObligatorioP3.EntidadesNegocio.CompraUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompraId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompraId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("ComprasUsuarios");
                });

            modelBuilder.Entity("ObligatorioP3.EntidadesNegocio.FichaCuidados", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FrecuenciaRiego")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Temperatura")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TipoIluminacion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fichas");
                });

            modelBuilder.Entity("ObligatorioP3.EntidadesNegocio.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("CompraId")
                        .HasColumnType("int");

                    b.Property<int>("PlantaId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CompraId");

                    b.HasIndex("PlantaId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("ObligatorioP3.EntidadesNegocio.Planta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Altura")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int?>("FichaCuidadosId")
                        .HasColumnType("int");

                    b.Property<string>("Foto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<string>("NombreCientifico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreVulgar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TipoAmbiente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoPlantaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FichaCuidadosId");

                    b.HasIndex("TipoPlantaId");

                    b.ToTable("Plantas");
                });

            modelBuilder.Entity("ObligatorioP3.EntidadesNegocio.Tasas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("TasaArancelaria")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TasaImportacion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TasaIva")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Tasas");
                });

            modelBuilder.Entity("ObligatorioP3.EntidadesNegocio.TipoPlanta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlantasId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TiposPlantas");
                });

            modelBuilder.Entity("ObligatorioP3.EntidadesNegocio.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("ObligatorioP3.EntidadesNegocio.Importada", b =>
                {
                    b.HasBaseType("ObligatorioP3.EntidadesNegocio.Compra");

                    b.Property<bool>("ContinenteOrigen")
                        .HasColumnType("bit");

                    b.Property<string>("MedidasSanitarias")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Importada");
                });

            modelBuilder.Entity("ObligatorioP3.EntidadesNegocio.Plaza", b =>
                {
                    b.HasBaseType("ObligatorioP3.EntidadesNegocio.Compra");

                    b.Property<decimal>("CostoFlete")
                        .HasColumnType("decimal(18,2)");

                    b.HasDiscriminator().HasValue("Plaza");
                });

            modelBuilder.Entity("ObligatorioP3.EntidadesNegocio.Compra", b =>
                {
                    b.HasOne("ObligatorioP3.EntidadesNegocio.Tasas", "Tasas")
                        .WithMany("Compras")
                        .HasForeignKey("TasasId");
                });

            modelBuilder.Entity("ObligatorioP3.EntidadesNegocio.CompraUsuario", b =>
                {
                    b.HasOne("ObligatorioP3.EntidadesNegocio.Compra", "Compra")
                        .WithMany("ComprasUsuarios")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ObligatorioP3.EntidadesNegocio.Usuario", "Usuario")
                        .WithMany("ComprasUsuarios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ObligatorioP3.EntidadesNegocio.Item", b =>
                {
                    b.HasOne("ObligatorioP3.EntidadesNegocio.Compra", "Compra")
                        .WithMany("Items")
                        .HasForeignKey("CompraId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ObligatorioP3.EntidadesNegocio.Planta", "Planta")
                        .WithMany("Items")
                        .HasForeignKey("PlantaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ObligatorioP3.EntidadesNegocio.Planta", b =>
                {
                    b.HasOne("ObligatorioP3.EntidadesNegocio.FichaCuidados", "FichaCuidados")
                        .WithMany("Plantas")
                        .HasForeignKey("FichaCuidadosId");

                    b.HasOne("ObligatorioP3.EntidadesNegocio.TipoPlanta", "TipoPlanta")
                        .WithMany("Plantas")
                        .HasForeignKey("TipoPlantaId");
                });
#pragma warning restore 612, 618
        }
    }
}
